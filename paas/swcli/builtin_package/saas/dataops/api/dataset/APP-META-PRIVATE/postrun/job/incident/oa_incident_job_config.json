[{
  "id": 36,
  "gmtCreate": 1646019206181,
  "gmtModified": 1646019218407,
  "creator": "999999999",
  "operator": "999999999",
  "appId": "\"\"",
  "name": "oem_oauth_service_diagnosis",
  "alias": "用户鉴权服务诊断作业(内置)",
  "tags": ["oem", "oauth"],
  "description": "用户鉴权服务诊断作业(内置)",
  "options": null,
  "triggerType": null,
  "triggerConf": null,
  "scheduleType": "serial",
  "scheduleConf": {
    "taskIdList": [{
      "id": 179,
      "gmtCreate": 1646018909854,
      "gmtModified": 1646018927637,
      "creator": "999999999",
      "operator": "999999999",
      "appId": "\"\"",
      "name": "oem_oauth_service_unavailable",
      "alias": "用户鉴权服务不可用(内置)",
      "execTimeout": 300,
      "execType": "python",
      "execContent": "# coding: utf-8\n\nimport random\nimport json\nimport os\n\n\n# 五种状态\n# WAITING 等待自愈状态\n# RUNNING 自愈中\n# FAILURE 自愈失败\n# SUCCESS 自愈成功\n# CANCEL 自愈任务取消\n\n\ndef build_self_healing_instance():\n    # gmtSelfHealingStart gmtSelfHealingEnd selfHealingStatus\n    incident_instance = json.loads(open(os.getenv(\"varConfPath\")).read())\n\n    random_int = random.randint(1, 5)\n    if random_int == 1:\n        incident_instance[\"selfHealingStatus\"] = \"SUCCESS\"\n    else:\n        incident_instance[\"selfHealingStatus\"] = \"FAILURE\"\n    return incident_instance\n\n\ndef incident():\n    current_instance = build_self_healing_instance()\n    result = {\n        \"currentIncident\": current_instance\n    }\n    open(os.getenv(\"varConfPath\"), 'w').write(json.dumps(result))\n    print(json.dumps(result))\n\n\nincident()\n",
      "execRetryTimes": 0,
      "execRetryInterval": 0,
      "varConf": {},
      "sceneType": "incident",
      "sceneConf": {}
    }]
  },
  "sceneType": "incident",
  "sceneConf": {},
  "varConf": {},
  "notifyConf": null,
  "eventConf": [{
    "source": "INCIDENT",
    "type": "KAFKA",
    "config": {
      "server": "sreworks-kafka.sreworks:9092",
      "topics": ["sreworks-health-incident-6"]
    }
  }]
}]