[{
  "id": 30,
  "gmtCreate": 1645787553652,
  "gmtModified": 1645787553652,
  "creator": "",
  "operator": "",
  "appId": "",
  "name": "oem_user_order_failed_analysis",
  "alias": "用户订单失败分析作业(内置)",
  "tags": ["oem", "order", "failed"],
  "description": null,
  "options": null,
  "triggerType": null,
  "triggerConf": null,
  "scheduleType": "serial",
  "scheduleConf": {
    "taskIdList": [{
      "id": 168,
      "gmtCreate": 1645787553642,
      "gmtModified": 1646055008942,
      "creator": "",
      "operator": "999999999",
      "appId": "",
      "name": "oem_user_order_failed",
      "alias": "用户订单失败(内置)",
      "execTimeout": 600,
      "execType": "python",
      "execContent": "# coding: utf-8\n\nimport os\nimport json\nimport random\n\n\ndef build_new_instance():\n    incident_instance = json.loads(open(os.getenv(\"varConfPath\")).read())\n    new_incident_instance = {\n        \"appInstanceId\": incident_instance.get(\"appInstanceId\"),\n        \"appComponentInstanceId\": incident_instance.get(\"appComponentInstanceId\"),\n        \"cause\": \"告警分析产出新的订单服务DEMO异常\"\n    }\n\n    return new_incident_instance\n\n\ndef incident():\n    is_send = True if random.randint(100, 500)/100 > 2 else False\n    if is_send:\n        # 自愈依赖新的异常实例\n        result = {\n            \"nextIncident\": build_new_instance()\n        }\n        open(os.getenv(\"varConfPath\"), 'w').write(json.dumps(result))\n        return result\n    else:\n        return {}\n\n\nprint(json.dumps(incident()))\n",
      "execRetryTimes": 0,
      "execRetryInterval": 0,
      "varConf": {},
      "sceneType": "alert",
      "sceneConf": {
        "modelId": 4
      }
    }]
  },
  "sceneType": "alert",
  "sceneConf": {},
  "varConf": {},
  "notifyConf": null,
  "eventConf": [{
    "source": "ALERT",
    "type": "KAFKA",
    "config": {
      "server": "sreworks-kafka.sreworks:9092",
      "topics": ["sreworks-health-alert-3"]
    }
  }]
}]