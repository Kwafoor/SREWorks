<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alibaba.tesla.authproxy.model.mapper.RolePermissionRelMapper">

    <resultMap id="BaseResultMap" type="com.alibaba.tesla.authproxy.model.RolePermissionRelDO">
        <!-- DB 原生字段 -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="resource_path" property="resourcePath" jdbcType="VARCHAR"/>
        <result column="service_code" property="serviceCode" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="RoleBaseResultMap" type="com.alibaba.tesla.authproxy.model.RoleDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="locale" property="locale" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, tenant_id, role_id, resource_path, service_code, gmt_create, gmt_modified
    </sql>

    <insert id="insert" parameterType="RolePermissionRelDO">
        INSERT INTO ta_role_permission_rel (tenant_id, role_id, resource_path, service_code, gmt_create, gmt_modified)
        values (#{tenantId,jdbcType=VARCHAR},
                #{roleId,jdbcType=VARCHAR},
                #{resourcePath,jdbcType=VARCHAR},
                #{serviceCode,jdbcType=VARCHAR},
                UTC_TIMESTAMP(),
                UTC_TIMESTAMP())
    </insert>

    <delete id="delete">
        DELETE
        FROM ta_role_permission_rel
        WHERE tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND role_id = #{roleId,jdbcType=VARCHAR}
          AND resource_path = #{resourcePath,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteAll">
        DELETE
        FROM ta_role_permission_rel
    </delete>

    <select id="findAllByRoleId" resultMap="BaseResultMap">
        SELECT *
        FROM ta_role_permission_rel
        WHERE tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND role_id = #{roleId,jdbcType=VARCHAR}
    </select>

    <select id="findAllByResourcePath" resultMap="RoleBaseResultMap">
        SELECT B.*
        FROM ta_role_permission_rel AS A
                 LEFT JOIN ta_role AS B ON A.tenant_id = B.tenant_id AND A.role_id = B.role_id
        WHERE A.tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND A.resource_path = #{resourcePath,jdbcType=VARCHAR}
    </select>

    <select id="get" resultMap="BaseResultMap">
        SELECT *
        FROM ta_role_permission_rel
        WHERE tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND role_id = #{roleId,jdbcType=VARCHAR}
          AND resource_path = #{resourcePath,jdbcType=VARCHAR}
    </select>

    <select id="findAllByUserIdAndRoleIdPrefix" resultMap="BaseResultMap">
        SELECT A.*
        FROM ta_role_permission_rel AS A
                 LEFT JOIN ta_user_role_rel AS B ON A.tenant_id = B.tenant_id
            AND A.role_id = B.role_id
        WHERE B.tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND B.user_id = #{userId,jdbcType=VARCHAR}
          AND B.role_id LIKE CONCAT(#{roleIdPrefix,jdbcType=VARCHAR}, '%')
    </select>
</mapper>