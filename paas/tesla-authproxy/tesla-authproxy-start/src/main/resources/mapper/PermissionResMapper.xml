<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alibaba.tesla.authproxy.model.mapper.PermissionResMapper">

    <resultMap id="BaseResultMap" type="com.alibaba.tesla.authproxy.model.PermissionResDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="app_id" property="appId" jdbcType="VARCHAR"/>
        <result column="res_path" property="resPath" jdbcType="VARCHAR"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="permission_id" property="permissionId" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, app_id, res_path, memo, permission_id, gmt_create, gmt_modified
    </sql>

    <select id="getByAppAndResPath" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ta_permission_res where app_id = #{appId,jdbcType=VARCHAR} and
        left(#{resPath,jdbcType=VARCHAR},length(res_path)) = res_path
    </select>

    <select id="getByAppIdAndPermissionId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ta_permission_res where app_id = #{arg0,jdbcType=VARCHAR} and res_path = #{arg1,jdbcType=VARCHAR}
    </select>

    <select id="getByAppAndPath" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ta_permission_res where app_id = #{appId,jdbcType=VARCHAR} and res_path = #{resPath,jdbcType=VARCHAR}
    </select>

    <select id="selectOne" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ta_permission_res where app_id = #{arg0,jdbcType=VARCHAR} and permission_id = #{arg1,jdbcType=VARCHAR}
    </select>

    <select id="countByAppIdAndServiceCode" resultType="java.lang.Integer">
        select count(*)
        from ta_permission_res res
                 left join ta_permission_meta meta on res.res_path = meta.permission_code
        where res.app_id = #{arg0,jdbcType=VARCHAR}
          and meta.service_code = #{arg1,jdbcType=VARCHAR}
          and meta.is_enable = 1
    </select>

    <select id="queryByAppId" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ta_permission_res where app_id = #{appId,jdbcType=VARCHAR}
    </select>

    <select id="queryPermissionsByAppId" parameterType="java.lang.String" resultType="java.lang.String">
        select DISTINCT (permission_id)
        from ta_permission_res
        where app_id = #{appId,jdbcType=VARCHAR};
    </select>

    <select id="query" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ta_permission_res where 1 = 1
        <if test="appId != null">
            and app_id = #{appId,jdbcType=VARCHAR}
        </if>
        <if test="permissionId != null">
            and permission_id = #{permissionId,jdbcType=VARCHAR}
        </if>
        <if test="permissionIdList != null">
            and permission_id in
            <foreach item="permissionId" index="index" collection="permissionIdList" open="(" separator="," close=")">
                #{permissionId,jdbcType=VARCHAR}
            </foreach>
        </if>
        <if test="resPath != null">
            and res_path = #{resPath,jdbcType=VARCHAR}
        </if>
    </select>

    <insert id="insert" parameterType="com.alibaba.tesla.authproxy.model.PermissionResDO">
        insert into ta_permission_res (id, app_id, res_path, permission_id, memo, gmt_create, gmt_modified)
        values (#{id,jdbcType=BIGINT},
                #{appId,jdbcType=VARCHAR},
                #{resPath,jdbcType=VARCHAR},
                #{permissionId,jdbcType=VARCHAR},
                #{memo,jdbcType=VARCHAR},
                UTC_TIMESTAMP(),
                UTC_TIMESTAMP())
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into ta_permission_res (
        app_id,
        res_path,
        permission_id,
        memo,
        gmt_create,
        gmt_modified
        ) values
        <foreach collection="list" item="permissionRes" index="index" separator=",">
            (
            #{permissionRes.appId,jdbcType=VARCHAR},
            #{permissionRes.resPath,jdbcType=VARCHAR},
            #{permissionRes.permissionId,jdbcType=VARCHAR},
            #{permissionRes.memo,jdbcType=VARCHAR},
            UTC_TIMESTAMP(),
            UTC_TIMESTAMP()
            )
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.alibaba.tesla.authproxy.model.PermissionResDO">
        update ta_permission_res
        set app_id        = #{appId,jdbcType=VARCHAR},
            res_path      = #{resPath,jdbcType=VARCHAR},
            memo          = #{memo,jdbcType=VARCHAR},
            permission_id = #{permissionId,jdbcType=VARCHAR},
            gmt_modified  = UTC_TIMESTAMP()
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.alibaba.tesla.authproxy.model.PermissionResDO">
        update ta_permission_res
        <set>
            <if test="appId != null">
                app_id = #{appId,jdbcType=VARCHAR},
            </if>
            <if test="resPath != null">
                res_path = #{resPath,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="permissionId != null">
                permission_id = #{permissionId,jdbcType=VARCHAR},
            </if>
            gmt_modified = NOW()
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>


    <delete id="delete" parameterType="java.lang.Long">
        delete
        from ta_permission_res
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByAppIdAndPermissionId">
        delete
        from ta_permission_res
        where app_id = #{arg0,jdbcType=VARCHAR}
          and permission_id = #{arg1,jdbcType=VARCHAR}
    </delete>


</mapper>