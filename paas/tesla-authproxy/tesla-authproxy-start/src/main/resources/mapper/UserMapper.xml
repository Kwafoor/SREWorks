<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alibaba.tesla.authproxy.model.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.alibaba.tesla.authproxy.model.UserDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="bid" property="bid" jdbcType="VARCHAR"/>
        <result column="emp_id" property="empId" jdbcType="VARCHAR"/>
        <result column="buc_id" property="bucId" jdbcType="BIGINT"/>
        <result column="aliyun_pk" property="aliyunPk" jdbcType="VARCHAR"/>
        <result column="dep_id" property="depId" jdbcType="VARCHAR"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="login_pwd" property="loginPwd" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="dingding" property="dingding" jdbcType="VARCHAR"/>
        <result column="aliww" property="aliww" jdbcType="VARCHAR"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="is_first_login" property="isFirstLogin" jdbcType="TINYINT"/>
        <result column="is_locked" property="isLocked" jdbcType="TINYINT"/>
        <result column="access_key_id" property="accessKeyId" jdbcType="VARCHAR"/>
        <result column="access_key_secret" property="accessKeySecret" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="lang" property="lang" jdbcType="VARCHAR"/>
        <result column="is_immutable" property="isImmutable" jdbcType="TINYINT"/>
        <result column="secret_key" property="secretKey" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, bid, emp_id, buc_id, aliyun_pk, login_name, dep_id, nick_name, email,
        phone, dingding, aliww, memo, avatar, gmt_create, gmt_modified, last_login_time, is_first_login, is_locked,
        access_key_id, access_key_secret, status, lang, is_immutable, secret_key, user_id, tenant_id
    </sql>

    <select id="getByBucId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ta_user where buc_id = #{bucId,jdbcType=BIGINT}
    </select>

    <select id="getByEmpId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ta_user where emp_id = #{empId,jdbcType=VARCHAR}
    </select>

    <select id="getByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ta_user where login_name = #{loginName,jdbcType=VARCHAR}
    </select>

    <select id="getByLoginNameAndPassword" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ta_user where login_name = #{arg0} and login_pwd = #{arg1} limit 1
    </select>

    <select id="selectByParams" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ta_user where 1=1
        <if test="userName != null and userName != '' ">
            and nick_name like CONCAT(CONCAT('%', #{userName, jdbcType=VARCHAR}),'%')
        </if>
        <if test="loginName != null and loginName != '' ">
            and login_name like CONCAT(CONCAT('%', #{loginName, jdbcType=VARCHAR}),'%')
        </if>
        order by gmt_create desc
    </select>

    <select id="selectNoUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ta_user
        where user_id is null
        order by id asc
        limit 100
    </select>

    <select id="getByLoginNameAndEmail" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ta_user where login_name = #{arg0} and `email` = #{arg1} limit 1
    </select>

    <select id="getByAliyunId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ta_user where login_name = #{aliyunId,jdbcType=VARCHAR}
    </select>

    <select id="getByAliyunPk" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ta_user where aliyun_pk = #{aliyunPk,jdbcType=VARCHAR}
    </select>

    <select id="getByAccessKeyId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ta_user where access_key_id = #{aliyunPk,jdbcType=VARCHAR}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from ta_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ta_user
        where status = 0
        <if test="userName != null and userName != '' ">
            and nick_name like CONCAT(CONCAT('%', #{userName, jdbcType=VARCHAR}),'%')
        </if>
        order by gmt_create desc
    </select>

    <select id="findAllByUserIdIn" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ta_user
        WHERE user_id IN
        <foreach collection="userIds" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ta_user
        where user_id = #{userId, jdbcType=VARCHAR}
    </select>

    <select id="selectByPages" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ta_user
        ORDER BY id
        LIMIT #{limit,jdbcType=INTEGER} OFFSET #{offset,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from ta_user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.alibaba.tesla.authproxy.model.UserDO">
        insert into ta_user (id,
                             bid,
                             emp_id,
                             buc_id,
                             aliyun_pk,
                             login_name,
                             dep_id,
                             login_pwd,
                             nick_name,
                             email,
                             phone,
                             dingding,
                             aliww,
                             memo,
                             avatar,
                             gmt_create,
                             gmt_modified,
                             last_login_time,
                             is_first_login,
                             is_locked,
                             access_key_id,
                             access_key_secret,
                             status,
                             lang,
                             is_immutable,
                             secret_key,
                             user_id,
                             tenant_id)
        values (#{id,jdbcType=BIGINT},
                #{bid,jdbcType=VARCHAR},
                #{empId,jdbcType=VARCHAR},
                #{bucId,jdbcType=BIGINT},
                #{aliyunPk,jdbcType=VARCHAR},
                #{loginName,jdbcType=VARCHAR},
                #{depId,jdbcType=VARCHAR},
                #{loginPwd,jdbcType=VARCHAR},
                #{nickName,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR},
                #{phone,jdbcType=VARCHAR},
                #{dingding,jdbcType=VARCHAR},
                #{aliww,jdbcType=VARCHAR},
                #{memo,jdbcType=VARCHAR},
                #{avatar,jdbcType=VARCHAR},
                #{gmtCreate,jdbcType=TIMESTAMP,typeHandler=com.alibaba.tesla.common.mybatis.TeslaDateTypeHandler},
                #{gmtModified,jdbcType=TIMESTAMP,typeHandler=com.alibaba.tesla.common.mybatis.TeslaDateTypeHandler},
                #{lastLoginTime,jdbcType=TIMESTAMP,typeHandler=com.alibaba.tesla.common.mybatis.TeslaDateTypeHandler},
                #{isFirstLogin,jdbcType=TINYINT},
                #{isLocked,jdbcType=TINYINT},
                #{accessKeyId,jdbcType=VARCHAR},
                #{accessKeySecret,jdbcType=VARCHAR},
                #{status,jdbcType=INTEGER},
                #{lang,jdbcType=VARCHAR},
                #{isImmutable,jdbcType=TINYINT},
                #{secretKey,jdbcType=VARCHAR},
                #{userId,jdbcType=VARCHAR},
                #{tenantId,jdbcType=VARCHAR})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.alibaba.tesla.authproxy.model.UserDO">
        update ta_user
        set emp_id            = #{empId,jdbcType=VARCHAR},
            bid               = #{bid,jdbcType=VARCHAR},
            buc_id            = #{bucId,jdbcType=BIGINT},
            aliyun_pk         = #{aliyunPk,jdbcType=VARCHAR},
            login_name        = #{loginName,jdbcType=VARCHAR},
            dep_id            = #{depId,jdbcType=VARCHAR},
            nick_name         = #{nickName,jdbcType=VARCHAR},
            email             = #{email,jdbcType=VARCHAR},
            phone             = #{phone,jdbcType=VARCHAR},
            dingding          = #{dingding,jdbcType=VARCHAR},
            aliww             = #{aliww,jdbcType=VARCHAR},
            memo              = #{memo,jdbcType=VARCHAR},
            avatar              = #{avatar,jdbcType=VARCHAR},
            gmt_create        = #{gmtCreate,jdbcType=TIMESTAMP,typeHandler=com.alibaba.tesla.common.mybatis.TeslaDateTypeHandler},
            gmt_modified      = #{gmtModified,jdbcType=TIMESTAMP,typeHandler=com.alibaba.tesla.common.mybatis.TeslaDateTypeHandler},
            last_login_time   = #{lastLoginTime,jdbcType=TIMESTAMP,typeHandler=com.alibaba.tesla.common.mybatis.TeslaDateTypeHandler},
            is_first_login    = #{isFirstLogin,jdbcType=TINYINT},
            is_locked         = #{isLocked,jdbcType=TINYINT},
            access_key_id     = #{accessKeyId,jdbcType=VARCHAR},
            access_key_secret = #{accessKeySecret,jdbcType=VARCHAR},
            status            = #{status,jdbcType=INTEGER},
            lang              = #{lang,jdbcType=VARCHAR},
            is_immutable      = #{isImmutable,jdbcType=TINYINT},
            secret_key        = #{secretKey,jdbcType=VARCHAR},
            tenant_id         = #{tenantId,jdbcType=VARCHAR},
            user_id           = #{userId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateLoginPassword">
        update ta_user
        set login_pwd    = #{arg1},
            gmt_modified = #{arg2,jdbcType=TIMESTAMP,typeHandler=com.alibaba.tesla.common.mybatis.TeslaDateTypeHandler}
        where login_name = #{arg0}
    </update>

</mapper>