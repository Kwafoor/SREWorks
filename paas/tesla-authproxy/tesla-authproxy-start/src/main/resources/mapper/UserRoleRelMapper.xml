<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alibaba.tesla.authproxy.model.mapper.UserRoleRelMapper">

    <resultMap id="BaseResultMap" type="com.alibaba.tesla.authproxy.model.UserRoleRelDO">
        <!-- DB 原生字段 -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>

        <!-- 补充字段 -->
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_description" property="roleDescription" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, tenant_id, user_id, role_id, gmt_create, gmt_modified
    </sql>

    <insert id="insert" parameterType="UserRoleRelDO">
        INSERT IGNORE INTO ta_user_role_rel (tenant_id, user_id, role_id, gmt_create, gmt_modified)
        values (#{tenantId,jdbcType=VARCHAR},
                #{userId,jdbcType=VARCHAR},
                #{roleId,jdbcType=VARCHAR},
                UTC_TIMESTAMP(),
                UTC_TIMESTAMP())
    </insert>

    <insert id="replace" parameterType="UserRoleRelDO">
        REPLACE INTO ta_user_role_rel (tenant_id, user_id, role_id, gmt_create, gmt_modified)
        values (#{tenantId,jdbcType=VARCHAR},
                #{userId,jdbcType=VARCHAR},
                #{roleId,jdbcType=VARCHAR},
                UTC_TIMESTAMP(),
                UTC_TIMESTAMP())
    </insert>

    <delete id="deleteAllByTenantIdAndUserIdAndRoleId">
        DELETE
        FROM ta_user_role_rel
        WHERE tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND user_id = #{userId,jdbcType=VARCHAR}
          AND role_id = #{roleId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteAll">
        DELETE
        FROM ta_user_role_rel
    </delete>

    <select id="findAllByTenantIdAndRoleId" resultMap="BaseResultMap">
        SELECT *
        FROM ta_user_role_rel
        WHERE tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND role_id = #{roleId,jdbcType=VARCHAR}
    </select>

    <select id="findAllByTenantIdAndUserIdAndAppId" resultMap="BaseResultMap">
        SELECT A.*,
               B.name        AS role_name,
               B.description AS role_description
        FROM ta_user_role_rel AS A
                 LEFT JOIN ta_role AS B ON A.tenant_id = B.tenant_id
            AND A.role_id = B.role_id
        WHERE B.locale = #{locale,jdbcType=VARCHAR}
          AND A.tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND A.user_id = #{userId,jdbcType=VARCHAR}
          AND (A.role_id LIKE CONCAT(#{appId,jdbcType=VARCHAR}, '%') OR A.role_id LIKE 'common%' OR A.role_id LIKE 'region%')
    </select>

    <select id="findAllByTenantIdAndUserId" resultMap="BaseResultMap">
        SELECT A.*,
               B.name        AS role_name,
               B.description AS role_description
        FROM ta_user_role_rel AS A
                 LEFT JOIN ta_role AS B ON A.tenant_id = B.tenant_id
            AND A.role_id = B.role_id
        WHERE B.locale = #{locale,jdbcType=VARCHAR}
          AND A.tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND A.user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="findUserByTenantIdAndRoleId" resultMap="BaseResultMap">
        SELECT A.*,
               B.name        AS role_name,
               B.description AS role_description
        FROM ta_user_role_rel AS A
                 LEFT JOIN ta_role AS B ON A.tenant_id = B.tenant_id
            AND A.role_id = B.role_id
        WHERE B.locale = #{locale,jdbcType=VARCHAR}
          AND A.tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND A.role_id = #{roleId,jdbcType=VARCHAR}
    </select>

    <select id="findDepIdByTenantIdAndRoleId" resultMap="BaseResultMap">
        SELECT A.*,
               B.name        AS role_name,
               B.description AS role_description
        FROM ta_user_role_rel AS A
                 LEFT JOIN ta_role AS B ON A.tenant_id = B.tenant_id
            AND A.role_id = B.role_id
        WHERE B.locale = #{locale,jdbcType=VARCHAR}
          AND A.tenant_id = #{tenantId,jdbcType=VARCHAR}
          AND A.role_id = #{roleId,jdbcType=VARCHAR}
          AND A.user_id LIKE 'depid::%'
    </select>
</mapper>