apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: canal-admin
    release: {{ .Release.Name }}
  name: canal-admin
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: canal-admin
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: canal-admin
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: canal-admin
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["/bin/bash","-c","/home/admin/canal-admin/bin/startup.sh && tail -F logs/admin.log"]
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        env:
          - name: adminPort
            value: "{{ .Values.adminConf.port }}"
          - name: address
            value:  "{{ .Values.adminConf.manageDatabase.address }}"
          - name: database
            value: "{{ .Values.adminConf.manageDatabase.database }}"
          - name: username
            value: "{{ .Values.adminConf.manageDatabase.username }}"
          - name: password
            value: "{{ .Values.adminConf.manageDatabase.password }}"
          - name: adminUser
            value: admin
          - name: adminPasswd
            value: "{{ .Values.adminConf.adminPassword }}"
        ports:
        - containerPort: {{ .Values.adminConf.port }}
          protocol: TCP
          name: http
        resources:
          requests:
            cpu: 300m
            memory: 1Gi
          limits:
            cpu: 1500m
            memory: 2Gi
        volumeMounts:
          - mountPath: /home/admin/canal-admin/bin/startup.sh
            name: admin-startup
            subPath: startup.sh

#      dnsPolicy: ClusterFirst
#      restartPolicy: Always

      volumes:
        - configMap:
            defaultMode: 0777
            name: canal-admin-startup-conf
          name: admin-startup

      securityContext:
        runAsUser: 0
