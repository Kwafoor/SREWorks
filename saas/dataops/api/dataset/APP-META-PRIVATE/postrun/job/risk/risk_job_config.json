[{
  "id": 28,
  "gmtCreate": 1645778812427,
  "gmtModified": 1645778812427,
  "creator": "",
  "operator": "",
  "appId": "",
  "name": "oem_user_order_latency_inspection",
  "alias": "用户订单延时巡检作业(内置)",
  "tags": ["oem", "user", "order", "latency"],
  "description": "用户订单延时巡检作业(内置)",
  "options": null,
  "triggerType": "cron",
  "triggerConf": {
    "cronExpression": "0 5 * * * ? *",
    "enabled": true
  },
  "scheduleType": "serial",
  "scheduleConf": {
    "taskIdList": [{
      "id": 166,
      "gmtCreate": 1645778812422,
      "gmtModified": 1646029487119,
      "creator": "",
      "operator": "999999999",
      "appId": "",
      "name": "oem_user_order_latency",
      "alias": "用户订单延时(内置)",
      "execTimeout": 300,
      "execType": "python",
      "execContent": "# coding: utf-8\n\nimport time\nimport json\nimport uuid\nimport requests\nimport random\n\nheaders = {}\nhost = {\n    \"health\": \"http://prod-health-health.sreworks.svc.cluster.local:80\",\n    \"app\": \"http://prod-app-app.sreworks.svc.cluster.local:80\"\n}\n\ndemo_app_id = \"sreworks1\"\ndef_name = \"用户下单耗时高\"\none_minute_millisecond = 1000\n\n\ndef get_app_instances():\n    endpoint = host[\"app\"] + \"/appcenter/appInstance/allAppInstances?page=1&pageSize=1000000\"\n    r = requests.get(endpoint, headers=headers)\n    datas = r.json().get(\"data\", None)\n    app_instances = []\n    if datas:\n        for data in datas[\"items\"]:\n            if data[\"appId\"] == demo_app_id:\n                app_instances.append(data)\n    return app_instances\n\n\ndef get_app_oem_risk_def():\n    endpoint = host[\"health\"] + f\"/definition/getDefinitions?appId={demo_app_id}&name={def_name}&category=risk\"\n    r = requests.get(endpoint, headers=headers)\n    datas = r.json().get(\"data\", None)\n    if datas:\n        return datas[0][\"id\"]\n    return None\n\n\ndef risk():\n    is_send = True if random.randint(0, 10) > 8 else False\n    if is_send:\n        risk_instances = []\n        def_id = get_app_oem_risk_def()\n        if def_id:\n            app_instances = get_app_instances()\n            for app_instance in app_instances:\n                random_int = random.randint(5, 60)\n                risk_instance = {\n                    \"appInstanceId\": app_instance[\"appInstanceId\"],\n                    \"appComponentInstanceId\": app_instance[\"appInstanceId\"],\n                    \"gmt_occur\": int(time.time() * one_minute_millisecond),\n                    \"source\": \"作业巡检\",\n                    \"content\": \"用户下单延时高[耗时:\" + str(random_int) + \"s],订单号[\" + str(uuid.uuid4()) + \"]\"\n                }\n                risk_instances.append(risk_instance)\n        print(json.dumps(risk_instances))\n\n\nrisk()\n",
      "execRetryTimes": 0,
      "execRetryInterval": 0,
      "varConf": {},
      "sceneType": "risk",
      "sceneConf": {
        "modelId": 2
      }
    }]
  },
  "sceneType": "risk",
  "sceneConf": {},
  "varConf": {},
  "notifyConf": null,
  "eventConf": []
}]